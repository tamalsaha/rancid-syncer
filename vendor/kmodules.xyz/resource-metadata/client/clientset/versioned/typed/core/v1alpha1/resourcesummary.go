/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by client-gen. DO NOT EDIT.

package v1alpha1

import (
	"context"
	"time"

	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	rest "k8s.io/client-go/rest"
	v1alpha1 "kmodules.xyz/resource-metadata/apis/core/v1alpha1"
	scheme "kmodules.xyz/resource-metadata/client/clientset/versioned/scheme"
)

// ResourceSummariesGetter has a method to return a ResourceSummaryInterface.
// A group's client should implement this interface.
type ResourceSummariesGetter interface {
	ResourceSummaries(namespace string) ResourceSummaryInterface
}

// ResourceSummaryInterface has methods to work with ResourceSummary resources.
type ResourceSummaryInterface interface {
	Get(ctx context.Context, name string, opts v1.GetOptions) (*v1alpha1.ResourceSummary, error)
	List(ctx context.Context, opts v1.ListOptions) (*v1alpha1.ResourceSummaryList, error)
	ResourceSummaryExpansion
}

// resourceSummaries implements ResourceSummaryInterface
type resourceSummaries struct {
	client rest.Interface
	ns     string
}

// newResourceSummaries returns a ResourceSummaries
func newResourceSummaries(c *CoreV1alpha1Client, namespace string) *resourceSummaries {
	return &resourceSummaries{
		client: c.RESTClient(),
		ns:     namespace,
	}
}

// Get takes name of the resourceSummary, and returns the corresponding resourceSummary object, and an error if there is any.
func (c *resourceSummaries) Get(ctx context.Context, name string, options v1.GetOptions) (result *v1alpha1.ResourceSummary, err error) {
	result = &v1alpha1.ResourceSummary{}
	err = c.client.Get().
		Namespace(c.ns).
		Resource("resourcesummaries").
		Name(name).
		VersionedParams(&options, scheme.ParameterCodec).
		Do(ctx).
		Into(result)
	return
}

// List takes label and field selectors, and returns the list of ResourceSummaries that match those selectors.
func (c *resourceSummaries) List(ctx context.Context, opts v1.ListOptions) (result *v1alpha1.ResourceSummaryList, err error) {
	var timeout time.Duration
	if opts.TimeoutSeconds != nil {
		timeout = time.Duration(*opts.TimeoutSeconds) * time.Second
	}
	result = &v1alpha1.ResourceSummaryList{}
	err = c.client.Get().
		Namespace(c.ns).
		Resource("resourcesummaries").
		VersionedParams(&opts, scheme.ParameterCodec).
		Timeout(timeout).
		Do(ctx).
		Into(result)
	return
}
