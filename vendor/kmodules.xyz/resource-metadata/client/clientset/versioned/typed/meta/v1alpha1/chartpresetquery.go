/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by client-gen. DO NOT EDIT.

package v1alpha1

import (
	"context"

	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	rest "k8s.io/client-go/rest"
	v1alpha1 "kmodules.xyz/resource-metadata/apis/meta/v1alpha1"
	scheme "kmodules.xyz/resource-metadata/client/clientset/versioned/scheme"
)

// ChartPresetQueriesGetter has a method to return a ChartPresetQueryInterface.
// A group's client should implement this interface.
type ChartPresetQueriesGetter interface {
	ChartPresetQueries() ChartPresetQueryInterface
}

// ChartPresetQueryInterface has methods to work with ChartPresetQuery resources.
type ChartPresetQueryInterface interface {
	Create(ctx context.Context, chartPresetQuery *v1alpha1.ChartPresetQuery, opts v1.CreateOptions) (*v1alpha1.ChartPresetQuery, error)
	ChartPresetQueryExpansion
}

// chartPresetQueries implements ChartPresetQueryInterface
type chartPresetQueries struct {
	client rest.Interface
}

// newChartPresetQueries returns a ChartPresetQueries
func newChartPresetQueries(c *MetaV1alpha1Client) *chartPresetQueries {
	return &chartPresetQueries{
		client: c.RESTClient(),
	}
}

// Create takes the representation of a chartPresetQuery and creates it.  Returns the server's representation of the chartPresetQuery, and an error, if there is any.
func (c *chartPresetQueries) Create(ctx context.Context, chartPresetQuery *v1alpha1.ChartPresetQuery, opts v1.CreateOptions) (result *v1alpha1.ChartPresetQuery, err error) {
	result = &v1alpha1.ChartPresetQuery{}
	err = c.client.Post().
		Resource("chartpresetqueries").
		VersionedParams(&opts, scheme.ParameterCodec).
		Body(chartPresetQuery).
		Do(ctx).
		Into(result)
	return
}
